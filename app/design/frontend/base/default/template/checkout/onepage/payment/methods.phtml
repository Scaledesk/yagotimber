<?php
/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Academic Free License (AFL 3.0)
 * that is bundled with this package in the file LICENSE_AFL.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/afl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magento.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magento.com for more information.
 *
 * @category    design
 * @package     base_default
 * @copyright   Copyright (c) 2006-2016 X.commerce, Inc. and affiliates (http://www.magento.com)
 * @license     http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 */
?>
<?php
/**
 * One page checkout payment methods
 *
 * @var $this Mage_Checkout_Block_Onepage_Payment_Methods
 */
?>

<?php
    $methods = $this->getMethods();
    $oneMethod = count($methods) <= 1;
?>
<?php if (empty($methods)): ?>
    <dt>
        <?php echo $this->__('No Payment Methods') ?>
    </dt>
<?php

 else:

$cat_array = array();
$home_decor = 0;
$quote= Mage::getSingleton('checkout/session')->getQuote();
foreach ($quote->getAllItems() as $item) 
{
   $product = $item->getProduct();
   $cat_array_get = $product->getCategoryIds();
  foreach($cat_array_get as $cat_array_get) {
	$cat_array[] =   $cat_array_get;
  }
}
$cat_array = array_unique($cat_array);
unset( $cat_array[array_search( '2', $cat_array )] );

$cats = array();					
$children = Mage::getModel('catalog/category')->getCategories(110);
foreach ($children as $category) {
  
   $cats[] = $category->getID();
   
	$the_current_id =  $category->getID();
  $children_sub = Mage::getModel('catalog/category')->getCategories($the_current_id);
 if( $children_sub ) { foreach ($children_sub as $childr_sub) {
	  
	   $cats[] = $childr_sub->getID();
  }
  
 }
}


$result=array_diff($cat_array,$cats);
 $check_all_cats = count($result);

 if($check_all_cats == 0){
	 $home_decor = 1; 
 }
 else {
	$home_decor = 0;  
 }

  foreach ($methods as $_method):
  $_code = $_method->getCode();
  if ($_code == 'cashondelivery' && $home_decor == 1) {
	
	  
  }
  else {
        
?>
    <dt id="dt_method_<?php echo $_code ?>">
    <?php if(!$oneMethod): ?>
        <input id="p_method_<?php echo $_code ?>" value="<?php echo $_code ?>" type="radio" name="payment[method]" title="<?php echo $this->escapeHtml($_method->getTitle()) ?>" onclick="payment.switchMethod('<?php echo $_code ?>')"<?php if($this->getSelectedMethodCode()==$_code): ?> checked="checked"<?php endif; ?> class="radio" />
    <?php else: ?>
        <span class="no-display"><input id="p_method_<?php echo $_code ?>" value="<?php echo $_code ?>" type="radio" name="payment[method]" checked="checked" class="radio" /></span>
        <?php $oneMethod = $_code; ?>
    <?php endif; ?>
        <label for="p_method_<?php echo $_code ?>"><?php echo $this->escapeHtml($this->getMethodTitle($_method)) ?> <?php echo $this->getMethodLabelAfterHtml($_method) ?></label>
    </dt>
    <?php if ($html = $this->getPaymentMethodFormHtml($_method)): ?>
    <dd id="dd_method_<?php echo $_code ?>">
        <?php echo $html; ?>
    </dd>
    <?php endif; }?>
<?php endforeach;
    endif;
?>
<?php echo $this->getChildChildHtml('additional'); ?>
<script type="text/javascript">
    //<![CDATA[
    <?php echo $this->getChildChildHtml('scripts'); ?>
    payment.init();
    <?php if (is_string($oneMethod)): ?>
    payment.switchMethod('<?php echo $oneMethod ?>');
        <?php endif; ?>
    //]]>
</script>
